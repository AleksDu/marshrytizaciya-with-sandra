{"version":3,"sources":["Hooks/useLS.js","views/PexelsImages/SearchForm.js","services/pexels.js","views/PexelsImages/ImagesList.js","pages/Pexels/Pexels.js"],"names":["useLS","key","init_value","useState","JSON","parse","localStorage","getItem","state","setState","useEffect","setItem","stringify","SearchFrom","getSearchValues","searchValue","setSearchValue","perPage","setPerPage","handleSearchChange","e","target","name","value","onSubmit","preventDefault","console","log","type","onChange","placeholder","PexelsFetchObject","base_url","api_key","this","_searchQuery","_page","_perPage","endPoint","a","axios","defaults","baseURL","headers","common","Authorization","searchQuery","page","params","url","get","result","data","photos","message","newPexelsFetchObject","ImagesList","searchResults","setSearchResults","status","setStatus","trim","resetPage","searchPhotos","then","catch","err","style","display","flexFlow","length","map","el","to","id","src","tiny","alt","photographer","onClick","prev","PexelsPage","title"],"mappings":"sMAEaA,EAAQ,SAACC,EAAKC,GACzB,MAA0BC,oBACxB,kCAAMC,KAAKC,MAAMC,aAAaC,QAAQN,WAAtC,QAA+CC,KADjD,mBAAOM,EAAP,KAAcC,EAAd,KAMA,OAHAC,qBAAU,WACRJ,aAAaK,QAAQV,EAAKG,KAAKQ,UAAUJ,MACxC,CAACP,EAAKO,IACF,CAACA,EAAOC,K,yGCPV,SAASI,EAAT,GAA0C,IAApBC,EAAmB,EAAnBA,gBAC3B,EAAsCX,mBAAS,IAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KACA,EAA8Bb,mBAAS,GAAvC,mBAAOc,EAAP,KAAgBC,EAAhB,KAEMC,EAAqB,SAACC,GAC1B,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,cACHN,EAAeO,GACf,MACF,IAAK,UACHL,EAAWK,KAYjB,OACE,uBAAMC,SARmB,SAACJ,GAC1BA,EAAEK,iBACFC,QAAQC,IAAI,eAAgBZ,EAAaE,GACzCH,EAAgBC,EAAaE,GAC7BD,EAAe,KAIf,UACE,uBACEY,KAAK,OACLN,KAAK,cACLC,MAAOR,EACPc,SAAUV,EACVW,YAAY,UAEd,uBACEF,KAAK,SACLN,KAAK,UACLC,MAAON,EACPY,SAAUV,EACVW,YAAY,sBAEd,wBAAQF,KAAK,SAAb,uB,sECtCOG,EAAb,WACE,WAAYC,EAAUC,GAAU,oBAC9BC,KAAKF,SAAWA,EAChBE,KAAKD,QAAUA,EACfC,KAAKC,aAAe,GACpBD,KAAKE,MAAQ,EACbF,KAAKG,SAAW,EAChBH,KAAKI,SAAW,GAPpB,6CAUE,WACE,OAAOJ,KAAKC,cAXhB,IAcE,SAAgBZ,GACd,OAAQW,KAAKC,aAAeZ,IAfhC,gBAkBE,WACE,OAAOW,KAAKE,OAnBhB,IAsBE,SAASb,GACP,OAAQW,KAAKE,OAASb,IAvB1B,uBAyBE,WACE,OAAQW,KAAKE,MAAQ,IA1BzB,mBA6BE,WACE,OAAOF,KAAKG,UA9BhB,IAiCE,SAAYd,GACV,OAAQW,KAAKG,SAAWd,IAlC5B,iEAqCE,kCAAAgB,EAAA,6DACEC,IAAMC,SAASC,QAAUR,KAAKF,SAC9BQ,IAAMC,SAASE,QAAQC,OAAOC,cAAgBX,KAAKD,QACnDC,KAAKI,SAAW,SAChBZ,QAAQC,IACN,cACAO,KAAKY,YACL,OACAZ,KAAKa,KACL,UACAb,KAAKjB,SAEH+B,EAZN,iBAYyBd,KAAKY,YAZ9B,iBAYkDZ,KAAKa,KAZvD,qBAYwEb,KAAKjB,SACvEgC,EAAMf,KAAKI,SAAWU,EAb5B,kBAeyBR,IAAMU,IAAID,GAfnC,cAeUE,EAfV,OAgBUC,EAAOD,EAAOC,KAAKC,OAhB7B,kBAiBWD,GAjBX,2DAmBW,KAAME,SAnBjB,0DArCF,6D,eCIMC,EAAuB,IAAIxB,EAHnB,6BACD,4DAKN,SAASyB,EAAT,GAA+C,IAAzBzC,EAAwB,EAAxBA,YAAaE,EAAW,EAAXA,QACxC,EAA0CjB,YAAM,cAAe,IAA/D,mBAAOyD,EAAP,KAAsBC,EAAtB,KACA,EAA4BvD,mBAAS,QAArC,mBAAOwD,EAAP,KAAeC,EAAf,KAEAlD,qBAAU,WACHK,EAAY8C,SACjBD,EAAU,WACVL,EAAqBO,YACrBP,EAAqBT,YAAc/B,EACnCwC,EAAqBtC,QAAUA,EAC/BsC,EACGQ,eACAC,MAAK,SAACP,GAELG,EAAU,WACVF,EAAiBD,MAElBQ,OAAM,SAACC,GACNxC,QAAQC,IAAIuC,GACZN,EAAU,eAKb,CAAC7C,EAAaE,EAASyC,IAiB1B,MAAe,SAAXC,EACK,yDAEM,YAAXA,EACK,8CAEM,YAAXA,GACFjC,QAAQC,IAAI,UAAW8B,GAErB,qCACE,oBAAIU,MAAO,CAAEC,QAAS,OAAQC,SAAU,YAAxC,SACGZ,EAAca,OAAS,GACtBb,EAAcc,KAAI,SAACC,GAAD,OAChB,6BACE,cAAC,IAAD,CAAMC,GAAE,kBAAaD,EAAGE,IAAxB,SACE,qBAAKC,IAAKH,EAAGG,IAAIC,KAAMC,IAAKL,EAAGM,kBAF1BN,EAAGE,SAOlB,wBAAQ9C,KAAK,SAASmD,QAnCR,WAClBxB,EAAqBR,KAAO,EAC5BQ,EACGQ,eACAC,MAAK,SAACP,GACLC,GAAiB,SAACsB,GAAD,4BAAcA,GAAd,YAAuBvB,OAExC/B,QAAQC,IAAI,mBAAoB8B,GAChCG,EAAU,cAEXK,OAAM,SAACC,GAENN,EAAU,aAuBV,2BAMS,UAAXD,EACK,gDADT,EC1Ea,SAASsB,EAAT,GAAgC,IAAVC,EAAS,EAATA,MACnC,EAAsC/E,mBAAS,IAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KACA,EAA8Bb,mBAAS,GAAvC,mBAAOc,EAAP,KAAgBC,EAAhB,KAKA,OACE,qCACE,6BAAKgE,IACL,cAACrE,EAAD,CAAYC,gBAPQ,SAACC,EAAaE,GACpCD,EAAeD,GACfG,EAAWD,MAMT,cAACuC,EAAD,CAAYzC,YAAaA,EAAaE,QAASA","file":"static/js/6.94bd5d5f.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport const useLS = (key, init_value) => {\n  const [state, setState] = useState(\n    () => JSON.parse(localStorage.getItem(key)) ?? init_value\n  );\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n};\n","import { useState } from \"react\";\n\nexport function SearchFrom({ getSearchValues }) {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [perPage, setPerPage] = useState(5);\n\n  const handleSearchChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"searchValue\":\n        setSearchValue(value);\n        break;\n      case \"perPage\":\n        setPerPage(value);\n        break;\n      default:\n    }\n  };\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"BEFORE FETCH\", searchValue, perPage);\n    getSearchValues(searchValue, perPage);\n    setSearchValue(\"\");\n    // setPerPage(2);\n  };\n  return (\n    <form onSubmit={handleSearchSubmit}>\n      <input\n        type=\"text\"\n        name=\"searchValue\"\n        value={searchValue}\n        onChange={handleSearchChange}\n        placeholder=\"Value\"\n      />\n      <input\n        type=\"number\"\n        name=\"perPage\"\n        value={perPage}\n        onChange={handleSearchChange}\n        placeholder=\"how many results?\"\n      />\n      <button type=\"submit\">search</button>\n    </form>\n  );\n}\n","import axios from \"axios\";\n\n// OOP\nexport class PexelsFetchObject {\n  constructor(base_url, api_key) {\n    this.base_url = base_url;\n    this.api_key = api_key;\n    this._searchQuery = \"\";\n    this._page = 1;\n    this._perPage = 5;\n    this.endPoint = \"\";\n  }\n\n  get searchQuery() {\n    return this._searchQuery;\n  }\n\n  set searchQuery(value) {\n    return (this._searchQuery = value);\n  }\n\n  get page() {\n    return this._page;\n  }\n\n  set page(value) {\n    return (this._page += value);\n  }\n  resetPage() {\n    return (this._page = 1);\n    // ((this._perPage = 5));\n  }\n  get perPage() {\n    return this._perPage;\n  }\n\n  set perPage(value) {\n    return (this._perPage = value);\n  }\n\n  async searchPhotos() {\n    axios.defaults.baseURL = this.base_url;\n    axios.defaults.headers.common.Authorization = this.api_key;\n    this.endPoint = \"search\";\n    console.log(\n      \"searchQuery\",\n      this.searchQuery,\n      \"page\",\n      this.page,\n      \"perPage\",\n      this.perPage\n    );\n    let params = `?query=${this.searchQuery}&page=${this.page}&per_page=${this.perPage}`;\n    let url = this.endPoint + params;\n    try {\n      const result = await axios.get(url);\n      const data = result.data.photos;\n      return data;\n    } catch (error) {\n      return error.message;\n    }\n    // return axios\n    //   .get(url)\n    //   .then((result) => {\n    //     // console.log(result)\n    //     return result.data;\n    //   })\n    //   .then((data) => {\n    //     // console.log(data)\n    //     return data.photos;\n    //   })\n\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n  }\n}\n\n// // // Declarative\n// export function PexelsFetchFunc() {\n//   let base_url = `https://api.pexels.com/v1/`;\n//   let api_key = `563492ad6f9170000100000188f3b8d3cd1047e392f28560cf9684bd`;\n//   axios.defaults.baseURL = base_url;\n//   axios.defaults.headers.common.Authorization = api_key;\n\n//   const searchPhotos = (searchQuery, searchPage, searchPerPage) => {\n//     axios.defaults.baseURL = this.base_url;\n//     axios.defaults.headers.common.Authorization = this.api_key;\n//     let endPoint = \"search\";\n//     let params = `?query=${searchQuery}&page=${searchPage}&per_page=${searchPerPage}`;\n//     let url = endPoint + params;\n\n//     axios\n//       .get(url)\n//       .then((result) => {\n//         console.log(result);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n// }\n","import { useState, useEffect } from \"react\";\nimport { PexelsFetchObject } from \"../../services/pexels\";\nimport { useLS } from \"../../Hooks/useLS\";\nimport { Link } from \"react-router-dom\";\nconst base_url = `https://api.pexels.com/v1/`;\nconst api_key = `563492ad6f91700001000001390f9fee0a794c1182a72e49e0e0eae2`;\n// const zhenya_key = `563492ad6f917000010000018ad09ac3acee45ebbb46a78f456e8ffa`;\nconst newPexelsFetchObject = new PexelsFetchObject(base_url, api_key);\n// console.log(newPexelsFetchObject);\n\nexport function ImagesList({ searchValue, perPage }) {\n  const [searchResults, setSearchResults] = useLS(\"pexelImages\", []);\n  const [status, setStatus] = useState(\"init\");\n  // =================\n  useEffect(() => {\n    if (!searchValue.trim()) return;\n    setStatus(\"pending\");\n    newPexelsFetchObject.resetPage();\n    newPexelsFetchObject.searchQuery = searchValue;\n    newPexelsFetchObject.perPage = perPage;\n    newPexelsFetchObject\n      .searchPhotos()\n      .then((searchResults) => {\n        // console.log(searchResults);\n        setStatus(\"success\");\n        setSearchResults(searchResults);\n      })\n      .catch((err) => {\n        console.log(err);\n        setStatus(\"error\");\n        // setStatus(() => (err ? 'error' : 'Opps'));\n      });\n\n    // return () => alert(`UNMOUNT`);\n  }, [searchValue, perPage, setSearchResults]);\n  // =================\n  const handleClick = () => {\n    newPexelsFetchObject.page = 1;\n    newPexelsFetchObject\n      .searchPhotos()\n      .then((searchResults) => {\n        setSearchResults((prev) => [...prev, ...searchResults]);\n        // setSearchResults(searchResults);\n        console.log(\"setSearchResults\", searchResults);\n        setStatus(\"success\");\n      })\n      .catch((err) => {\n        // console.log(err);\n        setStatus(\"error\");\n      });\n  };\n  if (status === \"init\") {\n    return <h1>Hello! Search something</h1>;\n  }\n  if (status === \"pending\") {\n    return <h1>Wait please!</h1>;\n  }\n  if (status === \"success\") {\n    console.log(\"success\", searchResults);\n    return (\n      <>\n        <ul style={{ display: \"flex\", flexFlow: \"row wrap\" }}>\n          {searchResults.length > 0 &&\n            searchResults.map((el) => (\n              <li key={el.id}>\n                <Link to={`/pexels/${el.id}`}>\n                  <img src={el.src.tiny} alt={el.photographer} />\n                </Link>\n              </li>\n            ))}\n        </ul>\n        <button type=\"button\" onClick={handleClick}>\n          load more\n        </button>\n      </>\n    );\n  }\n  if (status === \"error\") {\n    return <h1>ALARMA!!!</h1>;\n  }\n}\n","import { useState } from \"react\";\nimport { SearchFrom } from \"../../views/PexelsImages/SearchForm\";\nimport { ImagesList } from \"../../views/PexelsImages/ImagesList\";\nexport default function PexelsPage({ title }) {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [perPage, setPerPage] = useState(5);\n  const getSearchValues = (searchValue, perPage) => {\n    setSearchValue(searchValue);\n    setPerPage(perPage);\n  };\n  return (\n    <>\n      <h1>{title}</h1>\n      <SearchFrom getSearchValues={getSearchValues} />\n      <ImagesList searchValue={searchValue} perPage={perPage} />\n    </>\n  );\n}\n"],"sourceRoot":""}